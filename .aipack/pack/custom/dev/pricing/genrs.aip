# Options
```toml
model = "flash"
```

# Description

This assume the `aip run dev@pricing` was ran and create then `.ai-pricing/pricing-all.json`

Then, we can rust this one as `aip run dev@pricing/genrs`

# Data 

```lua

local p_utils = require("pricing_utils")

local json_content = aip.file.load(p_utils.json_all_path).content

local data_rs = aip.file.load("src/run/pricing/data.rs")

return {
    json_content = json_content,
    data_rs      = data_rs,
}

```

# Instruction

Below the json file, that we need to translate in a rust file and update the `data.rs` file following its format.

```json
{{data.json_content}}
```

Here is the `data.rs` file to update

```rs
{{data.data_rs.content}}
```

Important, we have to keep the `data.rs` types as is, just update/add the values that need to be added. Keep the whitepsaces too. 

Some very IMPORTANT rules when updating `data.rs`, 

- for openai model, when the name is prefix `openai-` you can remove it from the model name. 
- Ignore "preview" models except the `gemini-2.5-pro-preview` and `gemini-2.5-preview`
- Rename `gemini-2.5-pro-preview` to `gemini-2.5-pro` and `gemini-2.5-flash-preview` to `gemini-2.5-flash`
- For the gemini.. pricing, make sure to set the cache price if defined. 
- For google provider, no need `gemma-3-27b-it`, `text-embedding-004`
- Only change what needs to be changed.
- For Anthropic, `"claude-sonnet-3-7"` also duplicate for `"claude-sonnet-3-5"`
- for OPENAI pricing, ignore the "flex ..." model
- For OPENAI pricing, ignore the audio models. 
- Do NOT remove things that are there and present in the json.
- Do NOT add ANY COMMENT. Comments are not needed in this file. 
- DO NOT REMOVE COMMENT, DO NOT ADD COMMENT.

Just give back the `data.rs` file content in a rust makdown code block. 

Also, important, do not use code comment to explain what you did. Code comments should should be used to comment code, but not to explain why we did an code update. 

# Output 


```lua 
local content = ai_response.content
content = aip.md.outer_block_content_or_raw(content)

aip.file.save("src/run/pricing/data.rs", content)

return "Data saved to src/pricing/data.rs"

```
